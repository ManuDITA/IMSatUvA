name: "Terraform action"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: #allows manual trigger with Git UI

permissions:
  id-token: write  # Required for AWS OIDC connection
  contents: read   # Required for actions/checkout
  pull-requests: write  # Required for GitHub bot to comment on PRs

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: " 1.2.5"
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        continue-on-error: false

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
      
      - name: terraform refresh
        run: terraform refresh
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Manual Terraform Apply (Feature branch)
        if: github.ref != 'refs/head/master' && github.event_name=='workflow_dispatch'
        run: terraform apply -auto-approve -input=false

      - name: Auto Terraform Apply (main branch)
        if: github.ref == 'ref/head/master'
        run: terraform apply -auto-approve -input=false

  cleanup:
    if: github.event.ref_type == 'branch' && github.event_name == 'delete'
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.1.2
      with:
        terraform_version: "1.2.5"

    - name: Set Terraform State File for Cleanup
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
        echo "TF_STATE_KEY=feature-${BRANCH_NAME}.tfstate" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="key=${{ env.TF_STATE_KEY }}" -backend-config="region=${AWS_REGION}"

    - name: Destroy Feature Branch Resources
      run: terraform destroy -auto-approve
